@startuml ShortcutCommandsSequenceDiagram
!include style.puml
skinparam arrowThickness 1.1
skinparam sequenceLifeLineBorderColor LOGIC_COLOR
skinparam sequenceMessageFontColor BLACK

Actor ":User" as User LOGIC_COLOR_T1
Participant ":LogicManager" as LogicManager LOGIC_COLOR
Participant ":AddressBookParser" as AddressBookParser LOGIC_COLOR
Participant ":AddCustomerCommandParser" as AddCustomerCommandParser LOGIC_COLOR
Participant ":AddStaffCommandParser" as AddStaffCommandParser LOGIC_COLOR
Participant ":AddCustomerCommand" as AddCustomerCommand LOGIC_COLOR
Participant ":AddStaffCommand" as AddStaffCommand LOGIC_COLOR
Participant ":ModelManager" as ModelManager MODEL_COLOR

note over User, ModelManager #FFDDDD
  <b>Customer Shortcut Flow</b>
end note

User -> LogicManager : execute("c C099:John Smith:98761234")
activate LogicManager

LogicManager -> AddressBookParser : parseCommand("c C099:John Smith:98761234")
activate AddressBookParser

AddressBookParser -> AddressBookParser : commandWord = "c"
AddressBookParser -> AddCustomerCommandParser : parse("C099:John Smith:98761234")
activate AddCustomerCommandParser

AddCustomerCommandParser -> AddCustomerCommandParser : trimmedArgs.matches("^[^\\s:]+:.+:[^\\s:]+$")
AddCustomerCommandParser -> AddCustomerCommandParser : customerInfo = trimmedArgs.split(":")
AddCustomerCommandParser -> AddCustomerCommandParser : Create customer with defaults\nDEFAULT_EMAIL = "default@gmail.com"\nDEFAULT_ADDRESS = "empty"\nDEFAULT_VISIT_COUNT = "1"\netc.

AddCustomerCommandParser --> AddressBookParser : AddCustomerCommand
deactivate AddCustomerCommandParser

AddressBookParser --> LogicManager : AddCustomerCommand
deactivate AddressBookParser

LogicManager -> AddCustomerCommand : execute(model)
activate AddCustomerCommand

AddCustomerCommand -> ModelManager : addCustomer(customer)
activate ModelManager
ModelManager --> AddCustomerCommand : CommandResult
deactivate ModelManager

AddCustomerCommand --> LogicManager : CommandResult
deactivate AddCustomerCommand

LogicManager --> User : CommandResult
deactivate LogicManager

note over User, ModelManager #DDFFDD
  <b>Staff Shortcut Flow</b>
end note

User -> LogicManager : execute("s S001:Alice Tan:81234567")
activate LogicManager

LogicManager -> AddressBookParser : parseCommand("s S001:Alice Tan:81234567")
activate AddressBookParser

AddressBookParser -> AddressBookParser : commandWord = "s"
AddressBookParser -> AddStaffCommandParser : parse("S001:Alice Tan:81234567")
activate AddStaffCommandParser

AddStaffCommandParser -> AddStaffCommandParser : trimmedArgs.matches("^[^\\s:]+:.+:[^\\s:]+$")
AddStaffCommandParser -> AddStaffCommandParser : staffInfo = trimmedArgs.split(":")
AddStaffCommandParser -> AddStaffCommandParser : Create staff with defaults\nDEFAULT_EMAIL = "default@gmail.com"\nDEFAULT_ADDRESS = "empty"\nDEFAULT_ROLE = "Full Time worker"\netc.

AddStaffCommandParser --> AddressBookParser : AddStaffCommand
deactivate AddStaffCommandParser

AddressBookParser --> LogicManager : AddStaffCommand
deactivate AddressBookParser

LogicManager -> AddStaffCommand : execute(model)
activate AddStaffCommand

AddStaffCommand -> ModelManager : addStaff(staff)
activate ModelManager
ModelManager --> AddStaffCommand : CommandResult
deactivate ModelManager

AddStaffCommand --> LogicManager : CommandResult
deactivate AddStaffCommand

LogicManager --> User : CommandResult
deactivate LogicManager

@enduml
